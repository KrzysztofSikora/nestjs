type Player {
    id: ID!
    firstName: String
    lastName: String
    number: Int
}
type Match {
    id: ID!
    place: String
    date: String
    teams: [Team]
}

type Team {
    id: Int!
    name: String!
    players: [Player]
}
type MatchTeam {
    matchId: Int
    place: String
    date: String
    playerId: Int
    firstName: String
    lastName: String
    teamId: Int
    teamName: String
}


input CreatePlayerInput {
    firstName: String!
    lastName: String!
    number: Int!
}

input UpdatePlayerInput {
    id: Int!
    firstName: String
    lastName: String
    number: Int
}

type Query {
    players: [Player]
    player(id: Int!): Player

    teams: [Team]
    team(id: Int!): Team
    playersOfTeam(id: Int!): [Player]
    teamsOfPlayer(id: Int!): Team

    matches: [Match]
    teamsWithPlayers(matchId: Int!): Match
    matchListWithTeams(id: Int!): [MatchTeam]
}

type Mutation {
    createPlayer(createPlayerInput: CreatePlayerInput!): Player!
    updatePlayer(updatePlayerInput: UpdatePlayerInput!): Player!
    removePlayer(id: Int!): Boolean!
}

